{"version":3,"sources":["index.js"],"names":["App","state","num1","Math","ceil","random","num2","score","response","start","Date","now","correct","updateResponse","event","setState","target","value","inputKeyPress","key","parseInt","this","renderProblem","renderWin","className","onKeyPress","onChange","abs","round","React","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"qPAKMA,E,4MACJC,MAAQ,CACNC,KAAMC,KAAKC,KAAqB,GAAhBD,KAAKE,UACrBC,KAAMH,KAAKC,KAAqB,GAAhBD,KAAKE,UACrBE,MAAO,EACPC,SAAU,GACVC,MAAOC,KAAKC,MACZC,SAAS,G,EA2CXC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEP,SAAUM,EAAME,OAAOC,S,EAGzCC,cAAgB,SAACJ,GACG,UAAdA,EAAMK,MACOC,SAAS,EAAKnB,MAAMO,YACpB,EAAKP,MAAMC,KAAO,EAAKD,MAAMK,KAC1C,EAAKS,UAAS,SAACd,GAAD,MAAY,CACxBM,MAAON,EAAMM,MAAQ,EACrBL,KAAMC,KAAKC,KAAqB,GAAhBD,KAAKE,UAAiB,EAAKJ,MAAMC,KACjDI,KAAMH,KAAKC,KAAqB,GAAhBD,KAAKE,UAAiB,EAAKJ,MAAMK,KACjDE,SAAU,GACVI,SAAS,MAGX,EAAKG,SAAS,CAAEP,SAAU,GAAII,SAAS,M,4CAxD7C,WACE,OAAIS,KAAKpB,MAAMM,MAAQ,EACdc,KAAKC,gBAELD,KAAKE,c,2BAIhB,WACE,OACE,gCACE,qBAAIC,UAAYH,KAAKpB,MAAMW,QAAwB,GAAd,YAArC,UACGS,KAAKpB,MAAMC,KADd,MACuBmB,KAAKpB,MAAMK,QAElC,uBACEmB,WAAYJ,KAAKH,cACjBQ,SAAUL,KAAKR,eACfI,MAAOI,KAAKpB,MAAMO,WAEpB,wCAAWa,KAAKpB,MAAMM,MAAtB,kC,uBAKN,WACE,OACE,gCACE,wDACA,0CACW,IACT,8BACGJ,KAAKwB,IAAIxB,KAAKyB,OAAOlB,KAAKC,MAAQU,KAAKpB,MAAMQ,OAAS,MAAQ,IADjE,aAGK,IALP,sB,GAtCUoB,IAAMC,WAwElBC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAACnC,EAAD,IAAS+B,K","file":"static/js/main.84b3db58.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\n\nclass App extends React.Component {\n  state = {\n    num1: Math.ceil(Math.random() * 10),\n    num2: Math.ceil(Math.random() * 10),\n    score: 5,\n    response: \"\",\n    start: Date.now(),\n    correct: true\n  };\n\n  render() {\n    if (this.state.score > 0) {\n      return this.renderProblem();\n    } else {\n      return this.renderWin();\n    }\n  }\n\n  renderProblem() {\n    return (\n      <div>\n        <h1 className={!this.state.correct ? \"incorrect\" : \"\"}>\n          {this.state.num1} + {this.state.num2}\n        </h1>\n        <input\n          onKeyPress={this.inputKeyPress}\n          onChange={this.updateResponse}\n          value={this.state.response}\n        />\n        <h4>Solve {this.state.score} more sums to finish...</h4>\n      </div>\n    );\n  }\n\n  renderWin() {\n    return (\n      <div>\n        <h2> Challenge completed! </h2>\n        <h4>\n          You took{\" \"}\n          <i>\n            {Math.abs(Math.round((Date.now() - this.state.start) / 1000))}{\" \"}\n            seconds\n          </i>{\" \"}\n          to finish\n        </h4>\n      </div>\n    );\n  }\n\n  updateResponse = (event) => {\n    this.setState({ response: event.target.value });\n  };\n\n  inputKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      const answer = parseInt(this.state.response);\n      if (answer === this.state.num1 + this.state.num2) {\n        this.setState((state) => ({\n          score: state.score - 1,\n          num1: Math.ceil(Math.random() * 10) + this.state.num1,\n          num2: Math.ceil(Math.random() * 10) + this.state.num2,\n          response: \"\",\n          correct: true\n        }));\n      } else {\n        this.setState({ response: \"\", correct: false });\n      }\n    }\n  };\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}